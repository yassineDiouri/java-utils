/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.binx.utils.database.memdb.gui;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import org.binx.utils.database.memdb.MemdbUtils;
import org.binx.utils.database.memdb.core.manager.ColumnValueManager;
import org.binx.utils.database.memdb.core.manager.DatabaseListManager;
import org.binx.utils.database.memdb.core.manager.DatabaseManager;
import org.binx.utils.database.memdb.core.manager.SchemaManager;
import org.binx.utils.database.memdb.core.manager.TableManager;
import org.binx.utils.database.memdb.core.model.Column;

/**
 *
 * @author diouri
 */
public class MemdbGUI extends javax.swing.JFrame {

    /**
     * Creates new form MemDBGUI
     */
    public MemdbGUI() {
        initComponents();
        loadDatabases();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyPanel = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        createDbButton = new javax.swing.JButton();
        createSchemaButton = new javax.swing.JButton();
        createTableButton = new javax.swing.JButton();
        updateTableButton = new javax.swing.JButton();
        databasesViewPanel = new javax.swing.JPanel();
        databasesLabel = new javax.swing.JLabel();
        databasesComboBox = new javax.swing.JComboBox<>();
        databaseDetailPanel = new javax.swing.JPanel();
        schemasLabel = new javax.swing.JLabel();
        schemasComboBox = new javax.swing.JComboBox<>();
        schemaDetailPanel = new javax.swing.JPanel();
        schemasLabel1 = new javax.swing.JLabel();
        tablesComboBox = new javax.swing.JComboBox<>();
        tableDetailPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableLinesjTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Menu"));

        createDbButton.setText("New Database");
        createDbButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDbButtonActionPerformed(evt);
            }
        });

        createSchemaButton.setText("Create Schema");
        createSchemaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createSchemaButtonActionPerformed(evt);
            }
        });

        createTableButton.setText("Create Table");
        createTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTableButtonActionPerformed(evt);
            }
        });

        updateTableButton.setText("Update Table");
        updateTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTableButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createDbButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(createSchemaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addComponent(createTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addComponent(createDbButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createSchemaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 517, Short.MAX_VALUE))
        );

        databasesViewPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Databases"));

        databasesLabel.setText("Choose Database");

        databasesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                databasesComboBoxActionPerformed(evt);
            }
        });

        databaseDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Database"));

        schemasLabel.setText("Choose Schema");

        schemasComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemasComboBoxActionPerformed(evt);
            }
        });

        schemaDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Schema"));

        schemasLabel1.setText("Choose Table");

        tablesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tablesComboBoxActionPerformed(evt);
            }
        });

        tableDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Table"));

        tableLinesjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableLinesjTable.setToolTipText("");
        tableLinesjTable.setName(""); // NOI18N
        jScrollPane1.setViewportView(tableLinesjTable);
        tableLinesjTable.getAccessibleContext().setAccessibleName("");
        tableLinesjTable.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout tableDetailPanelLayout = new javax.swing.GroupLayout(tableDetailPanel);
        tableDetailPanel.setLayout(tableDetailPanelLayout);
        tableDetailPanelLayout.setHorizontalGroup(
            tableDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE))
        );
        tableDetailPanelLayout.setVerticalGroup(
            tableDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );

        javax.swing.GroupLayout schemaDetailPanelLayout = new javax.swing.GroupLayout(schemaDetailPanel);
        schemaDetailPanel.setLayout(schemaDetailPanelLayout);
        schemaDetailPanelLayout.setHorizontalGroup(
            schemaDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schemaDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(schemasLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tablesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(tableDetailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        schemaDetailPanelLayout.setVerticalGroup(
            schemaDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schemaDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(schemaDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schemasLabel1)
                    .addComponent(tablesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableDetailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout databaseDetailPanelLayout = new javax.swing.GroupLayout(databaseDetailPanel);
        databaseDetailPanel.setLayout(databaseDetailPanelLayout);
        databaseDetailPanelLayout.setHorizontalGroup(
            databaseDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databaseDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(schemasLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(schemasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(schemaDetailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        databaseDetailPanelLayout.setVerticalGroup(
            databaseDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databaseDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(databaseDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schemasLabel)
                    .addComponent(schemasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(schemaDetailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout databasesViewPanelLayout = new javax.swing.GroupLayout(databasesViewPanel);
        databasesViewPanel.setLayout(databasesViewPanelLayout);
        databasesViewPanelLayout.setHorizontalGroup(
            databasesViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databasesViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(databasesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(databasesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(databaseDetailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        databasesViewPanelLayout.setVerticalGroup(
            databasesViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databasesViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(databasesViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(databasesLabel)
                    .addComponent(databasesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(databaseDetailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(databasesViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(databasesViewPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createDbButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDbButtonActionPerformed
        String databaseName = JOptionPane.showInputDialog(null, "Database Name: ", "Create New Database", JOptionPane.QUESTION_MESSAGE);
        if(databaseName != null && !databaseName.isEmpty()) {
            MemdbUtils.createDatabase(databaseName);
            loadDatabases();
            databasesComboBox.setSelectedItem(databaseName);
        }
    }//GEN-LAST:event_createDbButtonActionPerformed

    private void databasesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_databasesComboBoxActionPerformed
        String databaseName = (String) databasesComboBox.getSelectedItem();
        MemdbUtils.changeDatabase(databaseName);
        databaseDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Databases: " + databaseName));
        loadSchemas();
    }//GEN-LAST:event_databasesComboBoxActionPerformed

    private void createSchemaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createSchemaButtonActionPerformed
        String schemaName = JOptionPane.showInputDialog(null, "Schema Name: ", "Create New Schema", JOptionPane.QUESTION_MESSAGE);
        if(schemaName != null && !schemaName.isEmpty()) {
            SchemaManager.createNewSchema(schemaName);
            loadSchemas();
            schemasComboBox.setSelectedItem(schemaName);
        }
    }//GEN-LAST:event_createSchemaButtonActionPerformed

    private void schemasComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemasComboBoxActionPerformed
        String schemaName = (String) schemasComboBox.getSelectedItem();
        schemaName = schemaName == null ? "public" : schemaName;
        schemaDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Schema: " + schemaName));
        loadTables(schemaName);
    }//GEN-LAST:event_schemasComboBoxActionPerformed

    private void createTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTableButtonActionPerformed
        String tableName = JOptionPane.showInputDialog(null, "Table Name: ", "Create New Table", JOptionPane.INFORMATION_MESSAGE);
        if(tableName != null && !tableName.isEmpty()) {
            TableManager.createNewTableDefaultDB((String) schemasComboBox.getSelectedItem(), tableName);
            loadTables((String) schemasComboBox.getSelectedItem());
            tablesComboBox.setSelectedItem(tableName);
        }
    }//GEN-LAST:event_createTableButtonActionPerformed

    private void updateTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTableButtonActionPerformed
        final String databaseName = (String) databasesComboBox.getSelectedItem();
        final String schemaName = (String) schemasComboBox.getSelectedItem();
        final String tableName = (String) tablesComboBox.getSelectedItem();
        
        if(tableName != null && !tableName.isEmpty()) {
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    JFrame frame = new UpdateTableGUI(databaseName, schemaName, tableName);
                    frame.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                    frame.setVisible(true);
                }
            });
        }
    }//GEN-LAST:event_updateTableButtonActionPerformed

    private void tablesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tablesComboBoxActionPerformed
        String tableName = (String) tablesComboBox.getSelectedItem();
        String title = tableName == null ? "Table" : "Table: " + tableName;
        tableDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(title));
        loadTableDetail();
    }//GEN-LAST:event_tablesComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemdbGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemdbGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemdbGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemdbGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemdbGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JButton createDbButton;
    private javax.swing.JButton createSchemaButton;
    private javax.swing.JButton createTableButton;
    private javax.swing.JPanel databaseDetailPanel;
    private javax.swing.JComboBox<String> databasesComboBox;
    private javax.swing.JLabel databasesLabel;
    private javax.swing.JPanel databasesViewPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JPanel schemaDetailPanel;
    private javax.swing.JComboBox<String> schemasComboBox;
    private javax.swing.JLabel schemasLabel;
    private javax.swing.JLabel schemasLabel1;
    private javax.swing.JPanel tableDetailPanel;
    private javax.swing.JTable tableLinesjTable;
    private javax.swing.JComboBox<String> tablesComboBox;
    private javax.swing.JButton updateTableButton;
    // End of variables declaration//GEN-END:variables

    private void loadDatabases() {
        databasesComboBox.removeAllItems();
        for(String database : DatabaseListManager.getAllNamesDatabases()) {
            databasesComboBox.addItem(database);
        }
    }
    
    private void loadSchemas() {
        schemasComboBox.removeAllItems();
        for(String schema : DatabaseManager.getAllNamesSchemas()) {
            schemasComboBox.addItem(schema);
        }
    }
    
    private void loadTables(String schemaName) {
        tablesComboBox.removeAllItems();
        for(String table : SchemaManager.getAllNamesTablesDefaultDB(schemaName)) {
            tablesComboBox.addItem(table);
        }
    }
    
    private void loadTableDetail() {
        tableLinesjTable.removeAll();
        String tableName = (String) tablesComboBox.getSelectedItem();
        String[] columns = new String[]{};
        Object[][] lines = new Object[][]{};
        
        if(TableManager.countColumns(tableName) > 0) {
            columns = new String[TableManager.countColumns(tableName)];
            for(Column column : TableManager.getAllColumns(tableName)) {
                columns[column.getOrder()] = column.getName();
            }
            
            if(TableManager.countLines(tableName) > 0) {
                lines = new Object[TableManager.countColumns(tableName)][];
        
                for(int i = 0; i < 10; i++) {
                    for(Column column : TableManager.getAllColumns(tableName)) {
                        lines[column.getOrder()][i] = 
                                ColumnValueManager.getValue(tableName, new Long(i), column.getOrder());
                    }
                }
            }
        }
        tableLinesjTable.setModel(new javax.swing.table.DefaultTableModel(
            lines,columns
        ));
    }
}
